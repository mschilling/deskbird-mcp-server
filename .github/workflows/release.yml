name: Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.1, 1.1.0, 2.0.0)'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
        - custom
      custom_version:
        description: 'Custom version number (only if version is custom)'
        required: false

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should-release: ${{ steps.check.outputs.should-release }}
      version: ${{ steps.check.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check if release needed
        id: check
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "should-release=true" >> $GITHUB_OUTPUT
            if [ "${{ github.event.inputs.version }}" = "custom" ]; then
              echo "version=${{ github.event.inputs.custom_version }}" >> $GITHUB_OUTPUT
            else
              echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            fi
          else
            # Check if there are changes that warrant a release
            # This is a simple check - you might want to implement more sophisticated logic
            CHANGES=$(git diff --name-only HEAD~1 HEAD | grep -E '^(src/|package\.json$)' | wc -l)
            if [ "$CHANGES" -gt 0 ]; then
              echo "should-release=true" >> $GITHUB_OUTPUT
              echo "version=patch" >> $GITHUB_OUTPUT
            else
              echo "should-release=false" >> $GITHUB_OUTPUT
            fi
          fi

  release:
    needs: check-changes
    if: needs.check-changes.outputs.should-release == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Bump version
        id: version
        run: |
          VERSION="${{ needs.check-changes.outputs.version }}"
          if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            # Custom version number
            npm version $VERSION --no-git-tag-version
          else
            # Semver bump (patch, minor, major)
            npm version $VERSION --no-git-tag-version
          fi
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new-version=v$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "version-number=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update changelog
        run: |
          TODAY=$(date +%Y-%m-%d)
          VERSION="${{ steps.version.outputs.version-number }}"
          sed -i "s/## \[Unreleased\]/## [Unreleased]\n\n## [$VERSION] - $TODAY/" CHANGELOG.md

      - name: Commit version bump
        run: |
          git add package.json CHANGELOG.md package-lock.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.new-version }}" || exit 0

      - name: Create Git tag
        run: |
          git tag ${{ steps.version.outputs.new-version }}

      - name: Push changes and tags
        run: |
          git push origin main
          git push origin ${{ steps.version.outputs.new-version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.new-version }}
          name: Release ${{ steps.version.outputs.new-version }}
          draft: false
          prerelease: false
          body: |
            ## Changes in ${{ steps.version.outputs.new-version }}

            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.

            ## Installation

            ```bash
            npm install -g @mschilling/deskbird-mcp-server
            ```

            ## Quick Setup

            ```bash
            npm run setup
            ```
          generate_release_notes: true

      - name: Publish to GitHub Packages
        run: |
          echo "Publishing package to GitHub Packages..."
          echo "Registry: https://npm.pkg.github.com"
          echo "Package: @mschilling/deskbird-mcp-server@$(node -p "require('./package.json').version")"
          npm publish --verbose
          echo "âœ… Package published successfully!"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
